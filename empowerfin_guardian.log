2025-06-15 14:58:03,344 - DEBUG - Successfully imported SystemMessage and HumanMessage
2025-06-15 14:58:19,699 - DEBUG - Successfully imported SystemMessage and HumanMessage
2025-06-15 14:58:33,024 - DEBUG - Successfully imported SystemMessage and HumanMessage
2025-06-15 14:58:36,175 - DEBUG - Successfully imported SystemMessage and HumanMessage
2025-06-15 14:58:38,045 - DEBUG - Using selector: SelectSelector
2025-06-15 14:58:38,090 - INFO - Bank statement processed successfully
2025-06-15 14:58:38,164 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a helpful financial assistant.'}, {'role': 'user', 'content': "Generate ethical financial advice for a user with goal 'Car in 2 years' and monthly expenses of $980.0."}], 'model': 'llama3-8b-8192', 'max_tokens': 200, 'n': 1, 'stop': None, 'stream': False, 'temperature': 0.7}}
2025-06-15 14:58:38,178 - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=None socket_options=None
2025-06-15 14:58:38,210 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000221C8040EC0>
2025-06-15 14:58:38,210 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x00000221C7AB3DA0> server_hostname='api.groq.com' timeout=None
2025-06-15 14:58:38,263 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000221C47AEAD0>
2025-06-15 14:58:38,264 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-06-15 14:58:38,265 - DEBUG - send_request_headers.complete
2025-06-15 14:58:38,266 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-06-15 14:58:38,267 - DEBUG - send_request_body.complete
2025-06-15 14:58:38,267 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-06-15 14:58:39,462 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 15 Jun 2025 09:28:39 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-groq-region', b'gcp-asia-south1'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14399'), (b'x-ratelimit-remaining-tokens', b'5956'), (b'x-ratelimit-reset-requests', b'6s'), (b'x-ratelimit-reset-tokens', b'440ms'), (b'x-request-id', b'req_01jxseprb0f05s6pjjqp6wj4y9'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=nrtNBomXVtdtYt55DdENBrshsCcYuVl3h3a5zj5FcHU-1749979719-1.0.1.1-3Rf8UOMsvF8fwU1N6drFGFIDP7z5_hGZEVCxM.m_hA_dB0Zglb0Rw18QHLsVP3DgTEs6Kt6xodJ8MfjUMg098OLx8Z4TpXOWNmfjTtssLM4; path=/; expires=Sun, 15-Jun-25 09:58:39 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'950109d52bb27f99-MAA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-15 14:58:39,475 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-15 14:58:39,476 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-06-15 14:58:39,480 - DEBUG - receive_response_body.complete
2025-06-15 14:58:39,482 - DEBUG - response_closed.started
2025-06-15 14:58:39,483 - DEBUG - response_closed.complete
2025-06-15 14:58:39,486 - DEBUG - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
2025-06-15 14:58:39,516 - INFO - FinTrust Agent completed successfully
2025-06-15 14:58:39,519 - INFO - Wellness Agent completed successfully
2025-06-15 14:58:39,528 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a helpful financial assistant.'}, {'role': 'user', 'content': "Generate a financial scenario plan for a user with goal 'Car in 2 years' and current balance of $1020.0."}], 'model': 'llama3-8b-8192', 'max_tokens': 200, 'n': 1, 'stop': None, 'stream': False, 'temperature': 0.7}}
2025-06-15 14:58:39,532 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-06-15 14:58:39,533 - DEBUG - send_request_headers.complete
2025-06-15 14:58:39,533 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-06-15 14:58:39,534 - DEBUG - send_request_body.complete
2025-06-15 14:58:39,536 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-06-15 14:58:40,022 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 15 Jun 2025 09:28:39 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-groq-region', b'gcp-asia-south1'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14398'), (b'x-ratelimit-remaining-tokens', b'5721'), (b'x-ratelimit-reset-requests', b'10.728s'), (b'x-ratelimit-reset-tokens', b'2.788s'), (b'x-request-id', b'req_01jxsepsjnfnptnzrtwmz3t9sp'), (b'cf-cache-status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'950109dd1adb7f99-MAA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-15 14:58:40,028 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-15 14:58:40,030 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-06-15 14:58:40,038 - DEBUG - receive_response_body.complete
2025-06-15 14:58:40,044 - DEBUG - response_closed.started
2025-06-15 14:58:40,045 - DEBUG - response_closed.complete
2025-06-15 14:58:40,046 - DEBUG - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
2025-06-15 14:58:40,050 - INFO - Cognitive Twin Agent completed successfully
2025-06-15 14:58:40,055 - INFO - Empathy Auditor Agent completed successfully
2025-06-15 14:58:40,059 - INFO - Generating final output
2025-06-15 14:58:40,072 - DEBUG - Final state contents: {'user_consent': True, 'bank_statement': {'balance': 1020.0}, 'transactions': [{'date': '2025-06-01', 'description': 'Grocery Store', 'amount': -50.0, 'category': 'discretionary'}, {'date': '2025-06-02', 'description': 'Salary Deposit', 'amount': 2000.0, 'category': 'other'}, {'date': '2025-06-03', 'description': 'Rent Payment', 'amount': -800.0, 'category': 'fixed'}, {'date': '2025-06-05', 'description': 'Restaurant', 'amount': -30.0, 'category': 'discretionary'}, {'date': '2025-06-07', 'description': 'Utility Bill', 'amount': -100.0, 'category': 'fixed'}], 'financial_goal': 'Car in 2 years', 'advice': "I'd be happy to help! Here's some ethical financial advice tailored to your goal of buying a car in 2 years and your monthly expenses of $980.0:\n\n**Assumptions:**\n\n* You want to buy a car in 2 years.\n* You're starting from scratch, with no current savings for a car.\n* Your monthly expenses are $980.0, which includes all necessary expenses like rent, utilities, food, transportation, insurance, and entertainment.\n\n**Action Plan:**\n\n1. **Create a budget:** Start by tracking your income and expenses to get a clear picture of where your money is going. Make a budget that accounts for every dollar. You can use a budgeting app like Mint or Personal Capital to make it easier.\n2. **Prioritize needs over wants:** Be honest with yourself about what you need versus what you want. Make sure to prioritize essential expenses like rent, utilities, and food over discretionary spending like dining out or entertainment.\n3.", 'risk_alert': 'No immediate financial risks detected.', 'scenario_plan': "Congratulations on setting a clear financial goal! To achieve your goal of buying a car in 2 years, I've created a financial scenario plan to help you get there.\n\n**Assumptions:**\n\n* The user's current balance is $1020.00\n* The user wants to buy a car in 2 years (24 months)\n* The user wants to save a fixed amount each month\n* The user expects to earn an average annual interest rate of 2.5% on their savings\n* The user will not make any withdrawals or additional deposits during the 2-year period\n\n**Goal:**\n\n* Save $10,000 in 24 months to buy a car\n\n**Monthly Savings:**\n\nTo calculate the monthly savings needed, we'll divide the total goal amount by the number of months:\n\n$10,000 (goal) ÷ 24 (months) = $416.67 per month\n\n**Financial Plan:**\n\n1. Start with the current balance: $", 'empathy_message': 'All messages are empathetic and supportive.', 'logs': ['Bank statement processed: categorized transactions and calculated balance.', "FinTrust Agent: Generated advice - I'd be happy to help! Here's some ethical financial advice tailored to your goal of buying a car in 2 years and your monthly expenses of $980.0:\n\n**Assumptions:**\n\n* You want to buy a car in 2 years.\n* You're starting from scratch, with no current savings for a car.\n* Your monthly expenses are $980.0, which includes all necessary expenses like rent, utilities, food, transportation, insurance, and entertainment.\n\n**Action Plan:**\n\n1. **Create a budget:** Start by tracking your income and expenses to get a clear picture of where your money is going. Make a budget that accounts for every dollar. You can use a budgeting app like Mint or Personal Capital to make it easier.\n2. **Prioritize needs over wants:** Be honest with yourself about what you need versus what you want. Make sure to prioritize essential expenses like rent, utilities, and food over discretionary spending like dining out or entertainment.\n3.", 'Wellness Agent: Generated risk alert - No immediate financial risks detected.', "Cognitive Twin Agent: Generated scenario plan - Congratulations on setting a clear financial goal! To achieve your goal of buying a car in 2 years, I've created a financial scenario plan to help you get there.\n\n**Assumptions:**\n\n* The user's current balance is $1020.00\n* The user wants to buy a car in 2 years (24 months)\n* The user wants to save a fixed amount each month\n* The user expects to earn an average annual interest rate of 2.5% on their savings\n* The user will not make any withdrawals or additional deposits during the 2-year period\n\n**Goal:**\n\n* Save $10,000 in 24 months to buy a car\n\n**Monthly Savings:**\n\nTo calculate the monthly savings needed, we'll divide the total goal amount by the number of months:\n\n$10,000 (goal) ÷ 24 (months) = $416.67 per month\n\n**Financial Plan:**\n\n1. Start with the current balance: $", 'Empathy Auditor Agent: Generated empathy message - All messages are empathetic and supportive.'], 'uploaded_file': UploadedFile(file_id='f8323343-1327-47e5-b4ed-e49e9abd7f97', name='mock_bank_statement.csv', type='text/csv', size=189, _file_urls=file_id: "f8323343-1327-47e5-b4ed-e49e9abd7f97"
upload_url: "/_stcore/upload_file/6b4a1cf6-7657-40d5-a6d5-c07f78c62f2c/f8323343-1327-47e5-b4ed-e49e9abd7f97"
delete_url: "/_stcore/upload_file/6b4a1cf6-7657-40d5-a6d5-c07f78c62f2c/f8323343-1327-47e5-b4ed-e49e9abd7f97"
)}
